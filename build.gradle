plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.3.72'
	id 'org.jetbrains.dokka' version '0.9.17'
	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.8.4'
}

group 'me.apemanzilla'
version '0.3.1'

repositories {
	mavenLocal()
	mavenCentral()

	// lwjgl snapshots
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

project.ext.lwjglVersion = '3.2.3'
project.ext.junitVersion = '5.2.0'

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

	compile "org.lwjgl:lwjgl:$lwjglVersion"
	compile "org.lwjgl:lwjgl-opencl:$lwjglVersion"
	compile "org.lwjgl:lwjgl:$lwjglVersion:natives-windows"
	compile "org.lwjgl:lwjgl:$lwjglVersion:natives-linux"
	compile "org.lwjgl:lwjgl:$lwjglVersion:natives-macos"

	testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
	testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
	testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

// TODO: use annotations instead of marking entire project experimental?

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
		freeCompilerArgs = [ '-Xuse-experimental=kotlin.ExperimentalUnsignedTypes' ]
	}
}

compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
		freeCompilerArgs = [ '-Xuse-experimental=kotlin.ExperimentalUnsignedTypes' ]
	}
}

test {
	useJUnitPlatform()
	outputs.upToDateWhen { false }
}

task sourceJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'

	group = 'build'
	description = 'Assembles a jar containing the main sources'
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact sourceJar
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_KEY')
	pkg {
		repo = 'maven'
		name = 'ktcl'
		licenses = [ 'MIT' ]
		vcsUrl = 'https://github.com/apemanzilla/ktcl.git'
		publications = ['mavenJava']
		publish = true

		version {
			name = project.version
			released = new Date()
		}
	}
}
